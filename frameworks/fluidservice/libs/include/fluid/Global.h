#ifndef FLUID_GLOBAL_H
#define FLUID_GLOBAL_H

#include <utils/Log.h>

#ifndef FLUIDLOG
#define FLUIDLOG(...) ((void)ALOG(LOG_INFO, LOG_FLUID, __VA_ARGS__))
#endif

#define SAFE_DELETE(p)  {if(p) delete p; p = nullptr;}

#define POLL_TIMEOUT	1000
#define MAX_SOCK_NUM	30
#define LISTEN_PORT 12130
#define NTP_PORT 12131
#define REPLY_ON	0
#define REPLY_OFF	1

namespace android{
	namespace BINDER {
		enum {
			REGISTER_APP_BINDERS = IBinder::FIRST_CALL_TRANSACTION,
			SEND_UI = IBinder::FIRST_CALL_TRANSACTION + 1,
			SEND_RPC = IBinder::FIRST_CALL_TRANSACTION + 2,
			SEND_INPUT = IBinder::FIRST_CALL_TRANSACTION + 3,
			SEND_IME_INPUT = IBinder::FIRST_CALL_TRANSACTION + 4,
			SEND_CACHE = IBinder::FIRST_CALL_TRANSACTION + 5,
			RESTORE_UI = IBinder::FIRST_CALL_TRANSACTION + 101,
			EXECUTE_RPC = IBinder::FIRST_CALL_TRANSACTION + 102,
			DISPATCH_INPUT = IBinder::FIRST_CALL_TRANSACTION + 103,
			DISPATCH_IME_INPUT = IBinder::FIRST_CALL_TRANSACTION + 104,
			STORE_CACHE = IBinder::FIRST_CALL_TRANSACTION + 105,
			NOTIFY_REMOTE_CRASH = IBinder::FIRST_CALL_TRANSACTION + 106,

			ON_ACTIVITY_LAUNCHED = IBinder::FIRST_CALL_TRANSACTION + 200,
			IS_HOST_DEVICE = IBinder::FIRST_CALL_TRANSACTION + 201,
			NOTIFY_APP_CRASH = IBinder::FIRST_CALL_TRANSACTION + 202,
			REQUEST_CACHE = IBinder::FIRST_CALL_TRANSACTION + 203,
			GET_CACHE = IBinder::FIRST_CALL_TRANSACTION + 204,
		};
	}; 

	namespace MSG {
		enum {
			PARCEL_TYPE = 1,
			PARCEL_TYPE_MSGLEN = sizeof(int) * 3 + sizeof(size_t) * 2,
			FILE_TYPE = 2,
			FILE_TYPE_MSGLEN = sizeof(int) * 3 + sizeof(uint32_t),
			REPLY_TYPE = 3,
			REPLY_TYPE_MSGLEN = sizeof(int) * 2 + sizeof(size_t) * 2,
			HEARTBEAT_TYPE = 4,
			HEARTBEAT_TYPE_MSGLEN = sizeof(int) * 2,
		};
	};

	namespace AM {
		enum {
			START_FLUID_ACTIVITY_TRANSACTION = 293,
			GET_APP_TOKEN_FOR_TOP_ACTIVITY_TRANSACTION = 294,
		};
	};

	namespace AT {
		enum {
			RESTORE_UI_TRANSACTION = 63,
			EXECUTE_RPC_TRANSACTION = 64,
			DISPATCH_INPUT_TRANSACTION = 65,
			DISPATCH_IME_INPUT_TRANSACTION = 66,
			STORE_CACHE_TRANSACTION = 67,
			NOTIFY_REMOTE_CRASH_TRANSACTION = 68,
			NOTIFY_NETWORK_FAULT_TRANSACTION = 69,
			GET_CACHE_TRANSACTION = 70,
		};
	};

	namespace PM {
		enum {
			GET_PACKAGES_FOR_UID_TRANSACTION = 26,
		};
	};
};

#endif
